# For reference:
#
# -----------------------------------------------------------------------------
#
# Install new fonts with:
#
#   brew tap homebrew/cask-fonts
#
# A minimal font that works is then:
#
#   brew cask install font-powerline-symbols
#
# but the following also works, and is what I've got on my work laptop at the moment
#
#   brew cask install font-awesome-terminal-fonts
#
# I might also try the following, in an attempt to have nicer (but only black and white?)
# logos for things like Python - but after installation it doesn't seem to show up in
# iTerm2
#
#   brew cask install font-hack-nerd-font
#
# For iTerm, go to Preferences / Profiles / <the appropriate profile> / Text
# and select the font to use for Non-ASCII Font
#
# Choosing Powerline Symbols in Medium 12 works, or FontAwesome in Regular 12
# (see below)
#
# *Ideally* I'd have a nice coloured Python intertwined snakes logo for Python,
# and proper coloured icons for the other programming languages - but that seems
# to be somewhat more difficult to figure out. The current (default) coloured
# icons are baked into the actual Rust code.
#
# -----------------------------------------------------------------------------
#
# * The standard terminal colors are: black, red, green, blue, yellow, purple, cyan, white.
# * Prefix with bright- to get the bright version (e.g. bright-white).
# * Modify with any of bold, underline, dimmed
# * Can also specify #<six-digit-hex>   https://www.w3schools.com/colors/colors_hexadecimal.asp
# * Can also specify 0-255 (8-bit ANSI) https://i.stack.imgur.com/KTSQa.png
# * fg:<color> and bg:<color> aren't useful yet
#
# My standard terminal has a "parchment" background colour, so yellows don't
# work very well.
#
# -----------------------------------------------------------------------------
#
# The official way to startup starship in fish is to include:
#
#    starship init fish | source
#
# in my config.fish. I can find out what that will do by doing:
#
#    $ starship init fish --print-full-init
#    function fish_prompt
#        switch "$fish_key_bindings"
#            case fish_hybrid_key_bindings fish_vi_key_bindings
#                set keymap "$fish_bind_mode"
#            case '*'
#                set keymap insert
#        end
#        set -l exit_code $status
#        # Account for changes in variable name between v2.7 and v3.0
#        set -l starship_duration "$CMD_DURATION$cmd_duration"
#        "/usr/local/bin/starship" prompt --status=$exit_code --keymap=$keymap --cmd-duration=$starship_duration --jobs=(count (jobs -p))
#    end
#
#    # disable virtualenv prompt, it breaks starship
#    set VIRTUAL_ENV_DISABLE_PROMPT 1
#
#    function fish_mode_prompt; end
#    export STARSHIP_SHELL="fish"
#
# although of course the details may change with new versions of starship itself.
# -----------------------------------------------------------------------------

# Don't print a new line at the start of the prompt
add_newline = false

# Actually, with the prompt being longer, I do want a newline before the $
# [line_break]
# disabled = true

[character]
symbol = "$"                   # character before user input - default is ">"
vicmd_symbol = "N"             # ditto if in vi Normal mode
style_success = "black"        # default is "bold green"
style_failure = "bold red"     # this is the default

[cmd_duration]
style = "bold blue"            # default is "bold yellow"

[directory]
fish_style_pwd_dir_length = 1  # Try to emulate fish's directory truncation
style = "black"                # default is "bold cyan"

[git_branch]
style = "green"                # default is "bold purple"
symbol = ""                    # default is " ", but I get the word "on" for free anyway

[git_state]
style = "bold green"           # default is "bold yellow" - not good on my terminal

[git_status]
show_sync_count = true         # experimentally
# Alternative representation
deleted = "d"                  # default is "✘"
modified = "m"                 # default is "!"
stashed = "s"                  # default is "$"
untracked = "u"                # default is "?"
# Do I want these specifics?
conflicted_count.enabled = true
deleted_count.enabled = true
modified_count.enabled = true
renamed_count.enabled = true
stashed_count.enabled = true
untracked_count.enabled = true

# Disable the package module, hiding it from the prompt completely
# [package]
# disabled = true

[python]
style = "red"                  # default is bold yellow
